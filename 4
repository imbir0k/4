#include <iostream>
#include <string>
using namespace std;
class Transport {
protected:
    string type;
    string fuelType;
    int totalSeats;
public:
    Transport(const string& t, const string& fuel, int seats)
        : type(t), fuelType(fuel), totalSeats(seats) {}
    string getType() const {
        return type;
    }
    void setType(const string& t) {
        type = t;
    }
    string getFuelType() const {
        return fuelType;
    }
    void setFuelType(const string& fuel) {
        fuelType = fuel;
    }
    int getTotalSeats() const {
        return totalSeats;
    }
    void setTotalSeats(int seats) {
        totalSeats = seats;
    }
    virtual double calculateFuelConsumption() const = 0;
    virtual void displayInfo() const = 0;
    virtual void inputInfo() = 0;
    virtual void refuel() = 0;
};
class Car : public Transport {
public:
    Car(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}
    double calculateFuelConsumption() const override {
        return 8.5; 
    }
    void displayInfo() const override {
        cout << "Type: " << type << endl;
        cout << "Fuel Type: " << fuelType << endl;
        cout << "Total Seats: " << totalSeats << endl;
        cout << "Car-specific info goes here." << endl;
    }
    void inputInfo() override {
    }
    void refuel() override {
    }
};
class Ship : public Transport {
public:
    Ship(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}
    double calculateFuelConsumption() const override {
        return 25.0; 
    }
    void displayInfo() const override {
        cout << "Type: " << type << endl;
        cout << "Fuel Type: " << fuelType << endl;
        cout << "Total Seats: " << totalSeats << endl;
        cout << "Ship-specific info goes here." << endl;
    }
    void inputInfo() override {
    }
    void refuel() override {
    }
};
class Plane : public Transport {
public:
    Plane(const string& t, const string& fuel, int seats)
        : Transport(t, fuel, seats) {}
    double calculateFuelConsumption() const override {
        return 150.0; 
    }
    void displayInfo() const override {
        cout << "Type: " << type << endl;
        cout << "Fuel Type: " << fuelType << endl;
        cout << "Total Seats: " << totalSeats << endl;
        cout << "Plane-specific info goes here." << endl;
    }
    void inputInfo() override {
    }
    void refuel() override {
    }
};
int main() {
    Car car("Car", "Gasoline", 4);
    Ship ship("Ship", "Diesel", 100);
    Plane plane("Plane", "Jet Fuel", 200);
    Transport* transports[] = { &car, &ship, &plane };
    for (const auto& transport : transports) {
        transport->displayInfo();
        cout << "Fuel Consumption: " << transport->calculateFuelConsumption() << " L/100km" << endl;
        transport->inputInfo();
        transport->refuel();
        cout << endl;
    }
}
